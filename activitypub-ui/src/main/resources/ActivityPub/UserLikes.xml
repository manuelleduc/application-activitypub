<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="ActivityPub.UserLikes" locale="">
  <web>ActivityPub</web>
  <name>UserLikes</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>UserLikes</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#macro (activityPubActorLink $actor)
#set ($username = $services.webfinger.getWebfingerId($actor))
&lt;span class="activitypub-actor-link"&gt;
  #if ($services.activitypub.belongsToCurrentInstance("$actor.id"))
      &lt;a href="$actor.id"&gt;$username&lt;/a&gt;
  #else
    &lt;span class="wikiexternallink"&gt;&lt;a href="$actor.id"&gt;$username&lt;/a&gt;&lt;/span&gt;
  #end
&lt;/span&gt;
#end

#if ($request.livetable == "true")
  #if("$!{request.xpage}" == 'plain')
    $response.setContentType('application/json')
  #end
  #set ($currentActor = $services.activitypub.getActor($request.actor))
  ##==============================
  ## Offset = item # at which to start displaying data
  ##==============================
  #set($offset = $numbertool.toNumber($request.get('offset')))
  ## offset starts from 0 in velocity and 1 in javascript
  #set($offset = $offset - 1)
  #if($offset &lt; 0)
    #set($offset = 0)
  #end
  ##==================
  ## Limit = # of items to display
  ##==================
  ## We don't use the limit for now since there's no pagination.
  #set($limit = $numbertool.toNumber($request.get('limit')))
  #if ("$!currentActor.liked" != "")
    #set ($likedReferences = $services.activitypub.resolve($currentActor.liked))
  #else
    #set ($likedReferences = [])
  #end
  ##==========
  ## Sort direction
  ##==========
  #set($order = "$!request.sort")
  #if($order != '')
    #set($orderDirection = "$!{request.get('dir').toLowerCase()}")
    #if("$!orderDirection" != '' &amp;&amp; "$!orderDirection" != 'asc')
      #set($orderDirection = 'desc')
    #end
  #end
  #set ($resultRows = [])
  #foreach($likedObjectRef in $likedReferences)
    #set ($likedObject = $services.activitypub.resolve($likedObjectRef))
    #define ($attributedTo)
      #foreach ($actorRef in $likedObject.attributedTo)
        #set($actor = $services.activitypub.resolve($actorRef))
        #activityPubActorLink($actor)
      #end
    #end
    #if ("$!likedObject.published" != "")
      #set ($publishedDate = $xwiki.formatDate($likedObject.published))
    #else
      #set ($publishedDate = "N/A")
    #end
    #set ($row = {
      'published': $publishedDate,
      'type' : $likedObject.type,
      'attributedTo': "$attributedTo",
      'doc_viewable': true
    })
    #if ("$!likedObject.href" == "")
      #set ($discard = $row.put('doc_view_url', $likedObject.id))
    #else
      #set ($discard = $row.put('doc_view_url', $likedObject.href))
    #end
    #set ($discard = $resultRows.add($row))
  #end
  #set ($newOffset = $offset + 1)
  ## ===
  ## JSON
  ## ===
  {
    "totalrows": $resultRows.size(),
    "returnedrows":  $resultRows.size(),
    "offset": $newOffset,
    "reqNo": $numbertool.toNumber($request.reqNo),
    "rows": $jsontool.serialize($resultRows)
  }
#elseif ($request.method == "POST" &amp;&amp; $request.get('action') == 'likeNumber')
  #set ($documentReference = $services.model.resolveDocument($request.get('reference')))
  #set ($likeNumber = $services.activitypub.getLikeNumber($documentReference))
  #jsonResponse({
    'success': true,
    'likeNumber': $likeNumber
  })
#end
{{/velocity}}</content>
  <object>
    <name>ActivityPub.UserLikes</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>6e03e607-d9c0-48e6-8dd3-40022e562ec7</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-meta'], function($, xm) {
  'use strict';
  var init = function () {
    $("button.notification-like").removeClass('hidden');
    $("button.notification-like.not-liked").on('click', function () {
      var button = $(this);
      var notification = new XWiki.widgets.Notification(
        $jsontool.serialize($services.localization.render('activitypub.notification.like.inProgress')),
        'inprogress'
      );
      var activityId = $(this).attr('data-activity-id');
      $.post(new XWiki.Document().getURL("get"), {
        "xpage": "activitypub/likeAction",
        "outputSyntax": "plain",
        "form_token": xm.form_token,
        "activityId": activityId
      }).done(function (data) {
        if (data.success) {
          notification.replace(new XWiki.widgets.Notification(
            $jsontool.serialize($services.localization.render('activitypub.notification.like.done')),
            'done'
          ));
          button.removeClass('not-liked');
          button.prop('disabled',true);
        } else {
          notification.replace(new XWiki.widgets.Notification(
            $jsontool.serialize($services.localization.render('activitypub.notification.like.error')),
            'error'
          ));
        }
      });
    });
  };

  (XWiki.isInitialized &amp;&amp; init()) || document.observe('xwiki:dom:loading', init);
});</code>
    </property>
    <property>
      <name>Notification Like Action</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ActivityPub.UserLikes</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>3bf675cc-0dad-4cac-a344-316b35b3d89f</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>forbid</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-meta'], function ($, xm) {
  'use strict';
  
  var userLikesReference = XWiki.Model.resolve('ActivityPub.UserLikes', XWiki.EntityType.DOCUMENT);
  var userLikesURL = new XWiki.Document(userLikesReference).getURL('get');
  var fediverseLikeTitle = "$escapetool.xml($services.localization.render('activitypub.like.button.title'))";

  var init2 = function () {
    var likeButton = $('.like-button').first();
    if (likeButton.length &gt; 0) {
      updateLikeFromFediverse(true);
    
      // Ensure that the value is reset back in case of local like/unlike.
      var onMutations = function (mutations) {
        updateLikeFromFediverse(false);
      }
      var observer = new MutationObserver(onMutations);
      observer.observe(likeButton.get(0), { attributeFilter: ["class"]});
    }
  }
  
  var updateLikeFromFediverse = function (init) {
    var likeNumberElement = $('.like-number').first();
    var likeButton = $('.like-button').first();
    
    if (!init || (init &amp;&amp; likeButton.attr('data-like-fediverse') == undefined)) {
      var currentValue = Number(likeNumberElement.text());
      $.post(userLikesURL, {
          "outputSyntax": "plain",
          "form_token": xm.form_token,
          "action": "likeNumber",
          "reference": XWiki.Model.serialize(new XWiki.Document().getDocumentReference())
        }).done(function (data) {
          if (data.success) {
            var newValue = currentValue + data.likeNumber;
            likeNumberElement.text(newValue);
            var existingTitle = likeButton.attr('title');
            likeButton.attr('title', existingTitle + " " + fediverseLikeTitle + data.likeNumber);
            likeButton.attr('data-like-fediverse', data.likeNumber);
          } else {
            console.log("Error while getting like number");
            console.log(data);
          }
        });
    }
  };
  
  (XWiki.isInitialized &amp;&amp; init2()) || document.observe('xwiki:dom:loading', init2);
});</code>
    </property>
    <property>
      <name>Like counter enhancement</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <object>
    <name>ActivityPub.UserLikes</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>113a7cf7-8167-4cbf-9a27-cde9165357d4</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <async_cached>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_cached</name>
        <number>3</number>
        <prettyName>Cached</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_cached>
      <async_context>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>1</multiSelect>
        <name>async_context</name>
        <number>4</number>
        <prettyName>Context elements</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>, </separator>
        <separators>|, </separators>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <values>action=Action|doc.reference=Document|icon.theme=Icon theme|locale=Language|rendering.defaultsyntax=Default syntax|rendering.restricted=Restricted|rendering.targetsyntax=Target syntax|request.base=Request base URL|request.parameters=Request parameters|request.url=Request URL|request.wiki=Request wiki|user=User|wiki=Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </async_context>
      <async_enabled>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_enabled</name>
        <number>2</number>
        <prettyName>Asynchronous rendering</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_enabled>
      <content>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>content</name>
        <number>1</number>
        <prettyName>Executed Content</prettyName>
        <rows>25</rows>
        <size>120</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>5</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>6</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>parameters</name>
        <number>7</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>8</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <async_cached>1</async_cached>
    </property>
    <property>
      <async_context>
        <value>doc.reference</value>
        <value>wiki</value>
      </async_context>
    </property>
    <property>
      <async_enabled>1</async_enabled>
    </property>
    <property>
      <content>{{velocity}}
{{html clean="false"}} ## we need clean="false" because we want to display the raw content of #submenuitem()
 #template('menus_macros.vm')
 #set ($apLikersReference = $services.model.resolveDocument('ActivityPub.LikersView'))
 #set ($apLikers = $xwiki.getDocument($apLikersReference))
 #set ($queryString = "reference=$services.model.serialize($doc.documentReference, 'default')")
 #set ($menuURL = $apLikers.getURL('view', $queryString))
 #submenuitem($menuURL, $services.localization.render('activitypub.like.menu.likers'), 'activitypub-likers', '', 'heart')
{{/html}}
{{/velocity}}</content>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.template.menu.viewers</extensionPointId>
    </property>
    <property>
      <name>org.xwiki.contrib.activitypub.ui.menu-viewers-like</name>
    </property>
    <property>
      <parameters>order=120001</parameters>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
</xwikidoc>
